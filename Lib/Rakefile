require 'xcjobs'
require 'json'

xcode_version = `xcodebuild -version`.split("\n").first.scan(/\d+/).join('.')

def destinations(platform: 'iphonesimulator')
  if platform == 'iphonesimulator'
    prefix = 'iOS'
  elsif platform == 'watchsimulator'
    prefix = 'watchOS'
  elsif platform == 'appletvsimulator'
    prefix = 'tvOS'
  else
    return []
  end

  destinations = []
  devices = JSON.parse(`xcrun simctl list -j devices`)['devices']
  devices
    .keys
    .select { |key| key.start_with? prefix }
    .each do |os|
      devices[os].select { |device| device['availability'] == '(available)' }
        .each { |device| destinations << %[id=#{device['udid']}] }
    end

  destinations
end

def schemes
  ['UICKeyChainStore', 'libUICKeyChainStore']
end

if xcode_version.start_with?('7.0')
  def supportedPlatforms
    ['macosx', 'iphoneos', 'iphonesimulator', 'watchos', 'watchsimulator']
  end
elsif xcode_version.start_with?('6')
  def supportedPlatforms
    ['macosx', 'iphoneos', 'iphonesimulator']
  end
else
  def supportedPlatforms
    ['macosx', 'iphoneos', 'iphonesimulator', 'watchos', 'watchsimulator', 'appletvos', 'appletvsimulator']
  end
end

def configurations
  ['Debug', 'Release']
end

desc "build for all platforms"
task :build do |t|
  supportedPlatforms
    .product(configurations)
    .map { |platform, configuration| Rake::Task["build:#{platform}:#{configuration.downcase}"] }
    .map(&:invoke)
end

namespace :build do
  schemes.each do |scheme|
    supportedPlatforms.product(configurations).each do |platform, configuration|
      XCJobs::Build.new("#{platform}:#{configuration.downcase}") do |t|
        t.project = 'UICKeyChainStore'
        t.scheme = scheme
        t.sdk = platform
        destinations(platform: platform).each do |destination|
          t.add_destination(destination)
        end
        t.configuration = configuration
        t.build_dir = 'build'
        t.formatter = 'xcpretty -c'
        if ENV['CI']
          t.add_build_setting('CODE_SIGN_IDENTITY', '')
          t.add_build_setting('CODE_SIGNING_REQUIRED', 'NO')
        end
      end
    end
  end
end

namespace :test do
  supportedPlatforms
    .select { |platform| platform == 'macosx' || platform.end_with?('simulator') }.map do |platform|
      task platform do |t|
        configurations
          .map { |configuration| Rake::Task["test:#{platform}:#{configuration.downcase}"] }
          .map(&:invoke)
      end
    end
end
    
namespace :test do
  supportedPlatforms.product(configurations).each do |platform, configuration|
    XCJobs::Test.new("#{platform}:#{configuration.downcase}") do |t|
      t.project = 'UICKeyChainStore'
      t.scheme = 'UICKeyChainStore'
      t.sdk = platform
      destinations(platform: platform).each do |destination|
        t.add_destination(destination)
      end
      t.configuration = configuration
      if xcode_version.to_i >= 7
        t.coverage = true
      end
      t.build_dir = 'build'
      t.formatter = 'xcpretty -c'
    end
  end
  
  task :carthage do
    sh 'echo "github \"kishikawakatsumi/UICKeyChainStore\" \"${sha:-master}"\" > Cartfile'
    sh 'carthage update --no-use-binaries'
  end
end

XCJobs::Coverage::Coveralls.new()
